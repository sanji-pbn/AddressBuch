package de.ems.addressbuch.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import de.ems.addressbuch.entities.KontaktEntity;
import de.ems.addressbuch.entities.PersonEntity;
import de.ems.addressbuch.model.Kontakt;
import de.ems.addressbuch.model.Person;
import de.ems.addressbuch.service.KontaktService;

@RestController
@RequestMapping("/api/")
public class KontaktController {

	@Autowired
	private KontaktService kontaktService;

	@GetMapping("/versiontype")
	public ResponseEntity<String> getVersion() {
		System.out.println("Enter Version kontakt");
		return new ResponseEntity<String>("V0.0.1.Kontakt", HttpStatus.OK);
	}

	@GetMapping("/kontakte")
	public List<Kontakt> getAlleKontakte() {
		return kontaktService.getAlleKontakte();
	}

	// create person restAPI
	@GetMapping("/kontakt/create/{person_fk}")
	public ResponseEntity<Kontakt> create(@PathVariable String person_fk) {
		System.out.println("Enter kontakt/create");
		System.out.println(person_fk);
		return ResponseEntity.ok(kontaktService.createKontakt(person_fk));
	}


	@PostMapping("/kontakt/add")
	public Kontakt addKontakt(@RequestBody Kontakt kontakt) {
		System.out.println("Testing for creating123");
		return kontaktService.addKontakt(kontakt);
	}

	// get by pk
	@GetMapping("/kontakte/get/{pk}")
	public ResponseEntity<Kontakt> getKontaktByPk(@PathVariable String pk) {
		Kontakt getKontakt = kontaktService.getKontaktByPk(pk);
		return new ResponseEntity<>(getKontakt, HttpStatus.OK);
	}

	// to update kontakt
	@PutMapping("/kontakte/update/{pk}")
	public ResponseEntity<KontaktEntity> updateKontakt(@PathVariable String pk, @RequestBody KontaktEntity details) {
		System.out.println("Kontakt edited");
		System.out.println(details.toString());
		return kontaktService.updateKontakt(pk, details);
	}

	@DeleteMapping("/kontakte/delete/{pk}")
	public ResponseEntity<Map<String, Boolean>> deleteKontakt(@PathVariable String pk) {
		System.out.println("Person with id: " + pk + " is deleted");
		return kontaktService.deleteKontakt(pk);
	}

}
